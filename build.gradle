apply plugin: 'java'
apply plugin: 'maven'

group = 'com.conceptual'
version = '1.0-SNAPSHOT'
description = """Main-App"""

sourceCompatibility = 1.8
targetCompatibility = 1.8

configurations {
    // configuration that holds jars to include in the jar
    extraLibs
}

dependencies {
    compile 'org.springframework:spring-context:5.0.2.RELEASE'
    extraLibs group: 'org.springframework', name: 'spring-beans', version: '5.0.2.RELEASE'
    extraLibs group: 'org.springframework', name: 'spring-context', version: '5.0.2.RELEASE'
    extraLibs group: 'org.springframework', name: 'spring-aop', version: '5.0.2.RELEASE'
    extraLibs group: 'org.springframework', name: 'spring-jcl', version: '5.0.2.RELEASE'
    extraLibs group: 'org.springframework', name: 'spring-core', version: '5.0.2.RELEASE'
    extraLibs group: 'org.springframework', name: 'spring-expression', version: '5.0.2.RELEASE'
    testCompile group: 'junit', name: 'junit', version:'4.4'
    configurations.compile.extendsFrom(configurations.extraLibs)
}

jar {
    from {
        configurations.extraLibs.collect { it.isDirectory() ? it : zipTree(it) }
    }
        
    manifest {
        attributes 'Main-Class': 'com.conceptual.Main'
    }
}

repositories {
    mavenCentral()                                                                        
}                                                             

task createPom {
    description "Generates a pom.xml in the project root directory; useful e.g. for IDEs which can read POM but don't directly support Gradle."
    doLast {
        pom {
        }.writeTo("pom.xml")
    }
}

compileJava.dependsOn createPom

